---
layout: "post"
title: "MySql数据库"
date: "2019-04-18 22:59"
---



登入mysql
=======

```sql
mysql -uroot -ppassword
```

库
=

查看所有数据库
-------

```sql
show databases;
```

使用某个数据库
-------

```sql
use 数据库名
```

查看当前使用数据库
---------

```sql
select database();
```

创建数据库
-----

```sql
create database 库名 charset=utf8;
```

删除数据库
-----

```sql
drop database 库名;
```

数据类型
----

* 常用数据类型如下：
  * 整数：int，bit
  * 小数：decimal
  * 字符串：varchar,char
  * 日期时间: date, time, datetime
  * 枚举类型(enum)
* 特别说明的类型如下：
  * decimal表示浮点数，如decimal(5,2)表示共存5位数，小数占2位
  * char表示固定长度的字符串，如char(3)，如果填充'ab'时会补一个空格为'ab '
  * varchar表示可变长度的字符串，如varchar(3)，填充'ab'时就会存储'ab'
  * 字符串text表示存储大文本，当字符大于4000时推荐使用
  * 对于图片、音频、视频等文件，不存储在数据库中，而是上传到某个服务器上，然后在表中存储这个文件的保存路径

数值类型(常用)

| 类型      | 字节大小 | 有符号范围(Signed)                    | 无符号范围(Unsigned) |
| ----------- | -------- | ------------------------------------------ | ------------------------ |
| TINYINT     | 1        | -128 ~ 127                                 | 0 ~ 255                  |
| SAMLLINT    | 2        | -32768 ~ 32767                             | 0 ~ 65535                |
| MEDIUMINT   | 3        | -8388608 ~ 8388607                         | 0 ~ 16777215             |
| INT/INTEGER | 4        | -2147483648 ~2147483647                    | 0 ~ 4294967295           |
| BIGINT      | 8        | -9223372036854775808 ~ 9223372036854775807 | 0 ~ 18446744073709551615 |

字符串

| 类型  | 字节大小 | 示例                                                                 | 类型  |
| ------- | -------- | ---------------------------------------------------------------------- | ------- |
| CHAR    | 0-255    | 类型:char(3) 输入 'ab', 实际存储为'ab ', 输入'abcd' 会报长度过长的错误 | CHAR    |
| VARCHAR | 0-255    | 类型:varchar(3) 输 'ab',实际存储为'ab', 输入'abcd',会报长度过长的错误 | VARCHAR |
| TEXT    | 0-65535  | 大文本                                                              | TEXT    |
| 类型  | 字节大小 | 示例                                                                 | 类型  |
| CHAR    | 0-255    | 类型:char(3) 输入 'ab', 实际存储为'ab ', 输入'abcd' 会报长度过长的错误 | CHAR    |

日期时间类型

| 类型    | 字节大小 | 示例                                                | 类型    |
| --------- | -------- | ----------------------------------------------------- | --------- |
| DATE      | 4        | '2020-01-01'                                          | DATE      |
| TIME      | 3        | '12:29:59'                                            | TIME      |
| DATETIME  | 8        | '2020-01-01 12:29:59'                                 | DATETIME  |
| YEAR      | 1        | '2017'                                                | YEAR      |
| TIMESTAMP | 4        | '1970-01-01 00:00:01' UTC ~ '2038-01-01 00:00:01' UTC | TIMESTAMP |

约束
--

* 主键primary key：物理上存储的顺序
* 非空not null：此字段不允许填写空值
* 惟一unique：此字段的值不允许重复
* 默认default：当不填写此值时会使用默认值，如果填写时以填写为准
* 外键foreign key：对关系字段进行约束，当为关系字段填写值时，会到关联的表中查询此值是否存在，如果存在则填写成功，如果不存在则填写失败并抛出异常
* 说明：虽然外键约束可以保证数据的有效性，但是在进行数据的crud（增加、修改、删除、查询）时，都会降低数据库的性能，所以不推荐使用，那么数据的有效性怎么保证呢？答：可以在逻辑层进行控制

数据库表
====

创建表
---

```sql
-- 创建 表 表名(id字段 整形 无符号 不能为空 主键 自动增加,name字段 字符型(10字符大小))
create table students( id int unsigned not null primary key auto_increment, name varchar(10));
```

表字段
---

添加字段

```sql
alter table students add aeg int;
```

修改字段

```sql
alter table students change aeg age int;
```

修改字段类型

```sql
alter table students modify age varchar(5);
```

删除字段

```sql
alter table students drop age;
```

查看所有表

```sql
show tables;
```

查看表
---

查看/查询表结构

```sql
desc 表名;
```

```sql
+-------+------------------+------+-----+---------+----------------+
| Field | Type             | Null | Key | Default | Extra          |
+-------+------------------+------+-----+---------+----------------+
| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
| name  | varchar(10)      | YES  |     | NULL    |                |
+-------+------------------+------+-----+---------+----------------+
```

查看表创建语句

```sql
show create table 表名;
```

```sql
+----------+----------------------------------------------------------------------------------------------+
| Table    | Create Table                                                                                                                                                                             
+----------+----------------------------------------------------------------------------------------------+
| students | CREATE TABLE `students` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 
+----------+----------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
```

备份表

```sql
create table students_back select * from students;
```

```sql
+---------------+
| Tables_in_aa  |
+---------------+
| students      |
| students_back |
+---------------+
```

表重命名
----

```sql
alter table students rename student;
```

删除表
---

```sql
drop table students_back;
```

表数据
===

查询表中所有数据
--------

```sql
select * from 表名;
```

### 添加数据

```sql
insert into students values(0,'Tom');
```

添加指定字段数据
--------

```sql
insert into students(name) values('JC');
```

添加多条指定字段数据
----------

```sql
insert into students(name) values('aa'),('bb'),('cc');
```

修改数据
----

where为条件判断,如果不写会将该字段所有数据统一更改为相同内容

```sql
update students set id=10,name='dd' where id= 6;
```

删除数据
----

如果不写where,会将表中所有数据删除,但表还在

```sql
delete from students where id=10;
```

逻辑删除
----

```sql
alter table students add isdelete bit default 0;
```

```sql
+----+------+----------+
| id | name | isdelete |
+----+------+----------+
|  1 | tom  |          |
|  2 | JC   |          |
|  3 | JC   |          |
|  4 | aa   |          |
|  5 | bb   |          |
+----+------+----------+
5 rows in set (0.00 sec)
```

```sql
update students set isdelete=1 where id=5;
```

```sql
+----+------+----------+
| id | name | isdelete |
+----+------+----------+
|  1 | tom  |          |
|  2 | JC   |          |
|  3 | JC   |          |
|  4 | aa   |          |
|  5 | bb   |         |
+----+------+----------+
5 rows in set (0.00 sec)
```

表设计
===

三范式
---

1. 每一列(字段)中的数据都是最小分类,比如手机和座机分为两列不可分为一列
2. 每张表都要有一个唯一标示字段,有效避免重复数据的产生,比如:id字段
3. 数据不能存在传递关系，每个属性都跟主键有直接关系而不是间接关系

ER模型
----

### 一对一:

一个学生和一个老师

### 一对多:

一个老师和一个班级的学生

### 多对多:

班级学生和学生必须课程



查询
==

```sql
-- 准备数据


-- 创建表
create table students(
id int unsigned primary key auto_increment not null,
name varchar(20) default '',
age tinyint unsigned default 0,
height decimal(5,2),
gender enum('男','女','人妖','保密'),
cls_id int unsigned default 0,
isdelete bit default 0
);

-- 插入数据
insert into students values
(0,'小铭',18,180.00,2,1,0),
(0,'小月月',18,180.00,2,2,1),
(0,'彭于晏',29,185.00,1,1,0),
(0,'刘德华',59,175.00,1,2,1),
(0,'芙蓉',38,160.00,2,1,0),
(0,'凤姐',28,150.00,4,2,1),
(0,'王祖贤',18,172.00,2,1,1),
(0,'周杰伦',36,NULL,1,1,0),
(0,'程坤',27,181.00,1,2,0),
(0,'刘亦菲',25,166.00,2,2,0),
(0,'金星',33,162.00,3,3,1),
(0,'静香',12,180.00,2,4,0),
(0,'周杰',34,176.00,2,5,0);

-- 表结构
+----------+-------------------------------------+------+-----+---------+----------------+
| Field    | Type                                | Null | Key | Default | Extra          |
+----------+-------------------------------------+------+-----+---------+----------------+
| id       | int(10) unsigned                    | NO   | PRI | NULL    | auto_increment |
| name     | varchar(20)                         | YES  |     |         |                |
| age      | tinyint(3) unsigned                 | YES  |     | 0       |                |
| height   | decimal(5,2)                        | YES  |     | NULL    |                |
| gender   | enum('男','女','人妖','保密')       | YES  |     | NULL    |                |
| cls_id   | int(10) unsigned                    | YES  |     | 0       |                |
| isdelete | bit(1)                              | YES  |     | b'0'    |                |
+----------+-------------------------------------+------+-----+---------+----------------+
7 rows in set (0.01 sec)

+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
+----+-----------+------+--------+--------+--------+----------+
13 rows in set (0.00 sec)
```



别名
--

```sql
select name as 姓名 from students;

+-----------+
| 姓名      |
+-----------+
| 小铭      |
| 小月月    |
| 彭于晏    |
| 刘德华    |
| 芙蓉      |
| 凤姐      |
| 王祖贤    |
| 周杰伦    |
| 程坤      |
| 刘亦菲    |
| 金星      |
| 静香      |
| 周杰      |
+-----------+
```

去重
--

```sql
select distinct age,height from students;

+------+--------+
| age  | height |
+------+--------+
|   18 | 180.00 |
|   29 | 185.00 |
|   59 | 175.00 |
|   38 | 160.00 |
|   28 | 150.00 |
|   18 | 172.00 |
|   36 |   NULL |
|   27 | 181.00 |
|   25 | 166.00 |
|   33 | 162.00 |
|   12 | 180.00 |
|   34 | 176.00 |
+------+--------+
```

条件查询
----

### 比较运算

* 等于: =
* 大于: \>
* 大于等于: \>=
* 小于: \<
* 小于等于: \<=
* 不等于: != 或 \<\>

```sql
select * from students where id=3;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
+----+-----------+------+--------+--------+--------+----------+
select * from students where id>3;
select * from students where id>=3;
select * from students where id<3;
select * from students where id<=3;
select * from students where id!=3;
```

### 逻辑运算符

* and
* or
* not

```sql
select * from students where id>3 and age<30;
select * from students where height=180 or age<=18;
select * from students where not gender='男' and age<=18;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
+----+-----------+------+--------+--------+--------+----------+
4 rows in set (0.00 sec)
```

### 模糊查询

* like
* %表示任意多个任意字符
* \_表示一个任意字符

```sql
select * from students where name like '周%';
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
+----+-----------+------+--------+--------+--------+----------+
2 rows in set (0.00 sec)

select * from students where name like '周_';
+----+--------+------+--------+--------+--------+----------+
| id | name   | age  | height | gender | cls_id | isdelete |
+----+--------+------+--------+--------+--------+----------+
| 13 | 周杰   |   34 | 176.00 | 女     |      5 |          |
+----+--------+------+--------+--------+--------+----------+
1 row in set (0.00 sec)
```

### 范围查询

* in表示在一个非连续的范围内
* between…and…在一个连续的范围

```sql
select * from students where id in(1,3,4);
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
+----+-----------+------+--------+--------+--------+----------+
3 rows in set (0.00 sec)

select * from students where id between 3 and 8;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
+----+-----------+------+--------+--------+--------+----------+
6 rows in set (0.01 sec)

```

### 空判断

* 注意：null与''是不同的
* 判空is null
* 判不为空 is not null

```sql
select * from students where height is null;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
+----+-----------+------+--------+--------+--------+----------+
1 row in set (0.00 sec)

select * from students where height is not null;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
+----+-----------+------+--------+--------+--------+----------+
12 rows in set (0.00 sec)
```

### 优先级

* 优先级由高到低的顺序为：小括号，not，比较运算符，逻辑运算符
* and比or先运算，如果同时出现并希望先算or，需要结合()使用

排序
--

```sql
-- select * from 表名 order by 列1 asc|desc,列2 asc|desc,...
```

* 注意:可以和where同时使用,但是排序(order by)要在where之后

### 正序

```sql
select * from students order by age asc; 
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
+----+-----------+------+--------+--------+--------+----------+
13 rows in set (0.00 sec)
```

### 倒叙

```sql
select * from students order by age desc;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
+----+-----------+------+--------+--------+--------+----------+
13 rows in set (0.00 sec)
```

### 多列

```sql
select * from students order by age asc,height desc;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
+----+-----------+------+--------+--------+--------+----------+
13 rows in set (0.00 sec)
```

聚合函数(统计函数)
----------

### count()

* 统计非null值个数

```sql
select count(height) from students;
+---------------+
| count(height) |
+---------------+
|            12 |
+---------------+

mysql> select count(name) from students;
+-------------+
| count(*) |
+-------------+
|          13 |
+-------------+
```

### max()

* 最大值

### min()

* 最小值

### avg()

* 平均值

### sum()

* 合计值

```sql
select max(age) as 最大年龄,min(age) as 最小年龄,avg(age) as 平均年龄,sum(age) as 年龄总和 from students;
+--------------+--------------+--------------+--------------+
| 最大年龄     | 最小年龄     | 平均年龄     | 年龄总和     |
+--------------+--------------+--------------+--------------+
|           59 |           12 |      28.8462 |          375 |
+--------------+--------------+--------------+--------------+
1 row in set (0.00 sec)
```

分组
--

* 分组一般和聚合函数配合使用

```sql
-- select 列1,列2,聚合... from 表名 group by 列1,列2...
```

```sql
select height,gender,count(*) from students group by height,gender;
+--------+--------+----------+
| height | gender | count(*) |
+--------+--------+----------+
|   NULL | 男     |        1 |
| 150.00 | 保密   |        1 |
| 160.00 | 女     |        1 |
| 162.00 | 人妖   |        1 |
| 166.00 | 女     |        1 |
| 172.00 | 女     |        1 |
| 175.00 | 男     |        1 |
| 176.00 | 女     |        1 |
| 180.00 | 女     |        3 |
| 181.00 | 男     |        1 |
| 185.00 | 男     |        1 |
+--------+--------+----------+
11 rows in set (0.01 sec)
```

### 筛选

### 

* having
* where是对from后面指定的表进行数据筛选，属于对原始数据的筛选
* having是对group by的结果进行筛选

```sql
select height,gender,count(*) from students group by height,gender having gender='女';
+--------+--------+----------+
| height | gender | count(*) |
+--------+--------+----------+
| 160.00 | 女     |        1 |
| 166.00 | 女     |        1 |
| 172.00 | 女     |        1 |
| 176.00 | 女     |        1 |
| 180.00 | 女     |        3 |
+--------+--------+----------+
5 rows in set (0.00 sec)
```

分页
--

```sql
-- select * from 表名 limit start,count
```

```sql
select * from students limit 0,3;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
+----+-----------+------+--------+--------+--------+----------+
3 rows in set (0.00 sec)

select * from students limit 3,3;
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
+----+-----------+------+--------+--------+--------+----------+
3 rows in set (0.00 sec)
```

```sql
create table classs(
id int unsinged not null auto_increment primary key,
name varchar(20));
```

```sql
create table students(
id int unsigned primary key auto_increment not null,
name varchar(20) default '',
age tinyint unsigned default 0,
height decimal(5,2),
gender enum('男','女','人妖','保密'),
cls_id int unsigned default 0,
isdelete bit default 0
);
```

连接
--

### 创建数据

```sql
create table classes(id int unsigned not null auto_increment primary key,name varchar(20));
insert into classes(name) values('class_1'),('class_2'),('class_3'),('class_4'),('class_5');
insert into classes(name) values('class_6');
insert into students(name) values('xxx');
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  2 | class_2 |
|  3 | class_3 |
|  4 | class_4 |
|  5 | class_5 |
|  6 | class_6 |
+----+---------+
6 rows in set (0.00 sec)

+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
| 14 | xxx       |    0 |   NULL | NULL   |      0 |          |
+----+-----------+------+--------+--------+--------+----------+
14 rows in set (0.00 sec)
```

内连接(交集)

```sql
select * from students as s inner join classes as p on s.cls_id=p.id;

+----+-----------+------+--------+--------+--------+----------+----+---------+
| id | name      | age  | height | gender | cls_id | isdelete | id | name    |
+----+-----------+------+--------+--------+--------+----------+----+---------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |  1 | class_1 |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |  2 | class_2 |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |  1 | class_1 |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |  2 | class_2 |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |  1 | class_1 |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |  2 | class_2 |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |  1 | class_1 |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |  1 | class_1 |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |  2 | class_2 |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |  2 | class_2 |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |  3 | class_3 |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |  4 | class_4 |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |  5 | class_5 |
+----+-----------+------+--------+--------+--------+----------+----+---------+
13 rows in set (0.00 sec)
```

```sql
select s.name,p.name from students as s inner join classes as p on s.cls_id=p.id;

+-----------+---------+
| name      | name    |
+-----------+---------+
| 小铭      | class_1 |
| 小月月    | class_2 |
| 彭于晏    | class_1 |
| 刘德华    | class_2 |
| 芙蓉      | class_1 |
| 凤姐      | class_2 |
| 王祖贤    | class_1 |
| 周杰伦    | class_1 |
| 程坤      | class_2 |
| 刘亦菲    | class_2 |
| 金星      | class_3 |
| 静香      | class_4 |
| 周杰      | class_5 |
+-----------+---------+
13 rows in set (0.00 sec)
```

### 左连接

```sql
select * from students as s left join classes as p on s.cls_id=p.id;

+----+-----------+------+--------+--------+--------+----------+------+---------+
| id | name      | age  | height | gender | cls_id | isdelete | id   | name    |
+----+-----------+------+--------+--------+--------+----------+------+---------+
|  1 | 小铭      |   18 | 180.00 | 女     |      1 |          |    1 | class_1 |
|  2 | 小月月    |   18 | 180.00 | 女     |      2 |         |    2 | class_2 |
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |    1 | class_1 |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |    2 | class_2 |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |    1 | class_1 |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |    2 | class_2 |
|  7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |    1 | class_1 |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |    1 | class_1 |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |    2 | class_2 |
| 10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |    2 | class_2 |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |    3 | class_3 |
| 12 | 静香      |   12 | 180.00 | 女     |      4 |          |    4 | class_4 |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |    5 | class_5 |
| 14 | xxx       |    0 |   NULL | NULL   |      0 |          | NULL | NULL    |
+----+-----------+------+--------+--------+--------+----------+------+---------+
14 rows in set (0.00 sec)
```

### 右连接

```sql
select * from students as s right join classes as p on s.cls_id=p.id;

+------+-----------+------+--------+--------+--------+----------+----+---------+
| id   | name      | age  | height | gender | cls_id | isdelete | id | name    |
+------+-----------+------+--------+--------+--------+----------+----+---------+
|    1 | 小铭      |   18 | 180.00 | 女     |      1 |          |  1 | class_1 |
|    2 | 小月月    |   18 | 180.00 | 女     |      2 |         |  2 | class_2 |
|    3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |  1 | class_1 |
|    4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |  2 | class_2 |
|    5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |  1 | class_1 |
|    6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |  2 | class_2 |
|    7 | 王祖贤    |   18 | 172.00 | 女     |      1 |         |  1 | class_1 |
|    8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |  1 | class_1 |
|    9 | 程坤      |   27 | 181.00 | 男     |      2 |          |  2 | class_2 |
|   10 | 刘亦菲    |   25 | 166.00 | 女     |      2 |          |  2 | class_2 |
|   11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |  3 | class_3 |
|   12 | 静香      |   12 | 180.00 | 女     |      4 |          |  4 | class_4 |
|   13 | 周杰      |   34 | 176.00 | 女     |      5 |          |  5 | class_5 |
| NULL | NULL      | NULL |   NULL | NULL   |   NULL | NULL     |  6 | class_6 |
+------+-----------+------+--------+--------+--------+----------+----+---------+
14 rows in set (0.00 sec)
```

自关联
---

准备数据

```sql
create table areas(
aid int primary key,
atitle varchar(20),
pid int
);


INSERT INTO `areas` VALUES ('110000', '北京市', NULL);
INSERT INTO `areas` VALUES ('110100', '北京市', '110000');
INSERT INTO `areas` VALUES ('110101', '东城区', '110100');
INSERT INTO `areas` VALUES ('110102', '西城区', '110100');
INSERT INTO `areas` VALUES ('110103', '朝阳区', '110100');
INSERT INTO `areas` VALUES ('110104', '丰台区', '110100');
INSERT INTO `areas` VALUES ('110105', '石景山区', '110100');
INSERT INTO `areas` VALUES ('110106', '海淀区', '110100');
INSERT INTO `areas` VALUES ('110107', '门头沟区', '110100');
INSERT INTO `areas` VALUES ('110108', '房山区', '110100');
INSERT INTO `areas` VALUES ('110109', '通州区', '110100');
INSERT INTO `areas` VALUES ('110110', '顺义区', '110100');
INSERT INTO `areas` VALUES ('110111', '昌平区', '110100');
INSERT INTO `areas` VALUES ('110112', '大兴区', '110100');
INSERT INTO `areas` VALUES ('110113', '怀柔区', '110100');
INSERT INTO `areas` VALUES ('110114', '平谷区', '110100');
INSERT INTO `areas` VALUES ('110115', '密云县', '110100');
INSERT INTO `areas` VALUES ('110116', '延庆县', '110100');
INSERT INTO `areas` VALUES ('120000', '天津市', NULL);
INSERT INTO `areas` VALUES ('120100', '天津市', '120000');
INSERT INTO `areas` VALUES ('120101', '和平区', '120100');
INSERT INTO `areas` VALUES ('120102', '河东区', '120100');
INSERT INTO `areas` VALUES ('120103', '河西区', '120100');
INSERT INTO `areas` VALUES ('120104', '南开区', '120100');
INSERT INTO `areas` VALUES ('120105', '河北区', '120100');
INSERT INTO `areas` VALUES ('120106', '红桥区', '120100');
INSERT INTO `areas` VALUES ('120107', '滨海新区', '120100');
INSERT INTO `areas` VALUES ('120108', '东丽区', '120100');
INSERT INTO `areas` VALUES ('120109', '西青区', '120100');
INSERT INTO `areas` VALUES ('120110', '津南区', '120100');
INSERT INTO `areas` VALUES ('120111', '北辰区', '120100');
INSERT INTO `areas` VALUES ('120112', '武清区', '120100');
INSERT INTO `areas` VALUES ('120113', '宝坻区', '120100');
INSERT INTO `areas` VALUES ('120114', '宁河县', '120100');
INSERT INTO `areas` VALUES ('120115', '静海县', '120100');
INSERT INTO `areas` VALUES ('120116', '蓟县', '120100');

+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| aid    | int(11)     | NO   | PRI | NULL    |       |
| atitle | varchar(20) | YES  |     | NULL    |       |
| pid    | int(11)     | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

+--------+--------------+--------+
| aid    | atitle       | pid    |
+--------+--------------+--------+
| 110000 | 北京市       |   NULL |
| 110100 | 北京市       | 110000 |
| 110101 | 东城区       | 110100 |
| 110102 | 西城区       | 110100 |
| 110103 | 朝阳区       | 110100 |
| 110104 | 丰台区       | 110100 |
| 110105 | 石景山区     | 110100 |
| 110106 | 海淀区       | 110100 |
| 110107 | 门头沟区     | 110100 |
| 110108 | 房山区       | 110100 |
| 110109 | 通州区       | 110100 |
| 110110 | 顺义区       | 110100 |
| 110111 | 昌平区       | 110100 |
| 110112 | 大兴区       | 110100 |
| 110113 | 怀柔区       | 110100 |
| 110114 | 平谷区       | 110100 |
| 110115 | 密云县       | 110100 |
| 110116 | 延庆县       | 110100 |
| 120000 | 天津市       |   NULL |
| 120100 | 天津市       | 120000 |
| 120101 | 和平区       | 120100 |
| 120102 | 河东区       | 120100 |
| 120103 | 河西区       | 120100 |
| 120104 | 南开区       | 120100 |
| 120105 | 河北区       | 120100 |
| 120106 | 红桥区       | 120100 |
| 120107 | 滨海新区     | 120100 |
| 120108 | 东丽区       | 120100 |
| 120109 | 西青区       | 120100 |
| 120110 | 津南区       | 120100 |
| 120111 | 北辰区       | 120100 |
| 120112 | 武清区       | 120100 |
| 120113 | 宝坻区       | 120100 |
| 120114 | 宁河县       | 120100 |
| 120115 | 静海县       | 120100 |
| 120116 | 蓟县         | 120100 |
+--------+--------------+--------+
36 rows in set (0.00 sec)
```

```sql
select * from areas as c inner join areas as p on c.pid=p.aid;
+--------+--------------+--------+--------+-----------+--------+
| aid    | atitle       | pid    | aid    | atitle    | pid    |
+--------+--------------+--------+--------+-----------+--------+
| 110100 | 北京市       | 110000 | 110000 | 北京市    |   NULL |
| 110101 | 东城区       | 110100 | 110100 | 北京市    | 110000 |
| 110102 | 西城区       | 110100 | 110100 | 北京市    | 110000 |
| 110103 | 朝阳区       | 110100 | 110100 | 北京市    | 110000 |
| 110104 | 丰台区       | 110100 | 110100 | 北京市    | 110000 |
| 110105 | 石景山区     | 110100 | 110100 | 北京市    | 110000 |
| 110106 | 海淀区       | 110100 | 110100 | 北京市    | 110000 |
| 110107 | 门头沟区     | 110100 | 110100 | 北京市    | 110000 |
| 110108 | 房山区       | 110100 | 110100 | 北京市    | 110000 |
| 110109 | 通州区       | 110100 | 110100 | 北京市    | 110000 |
| 110110 | 顺义区       | 110100 | 110100 | 北京市    | 110000 |
| 110111 | 昌平区       | 110100 | 110100 | 北京市    | 110000 |
| 110112 | 大兴区       | 110100 | 110100 | 北京市    | 110000 |
| 110113 | 怀柔区       | 110100 | 110100 | 北京市    | 110000 |
| 110114 | 平谷区       | 110100 | 110100 | 北京市    | 110000 |
| 110115 | 密云县       | 110100 | 110100 | 北京市    | 110000 |
| 110116 | 延庆县       | 110100 | 110100 | 北京市    | 110000 |
| 120100 | 天津市       | 120000 | 120000 | 天津市    |   NULL |
| 120101 | 和平区       | 120100 | 120100 | 天津市    | 120000 |
| 120102 | 河东区       | 120100 | 120100 | 天津市    | 120000 |
| 120103 | 河西区       | 120100 | 120100 | 天津市    | 120000 |
| 120104 | 南开区       | 120100 | 120100 | 天津市    | 120000 |
| 120105 | 河北区       | 120100 | 120100 | 天津市    | 120000 |
| 120106 | 红桥区       | 120100 | 120100 | 天津市    | 120000 |
| 120107 | 滨海新区     | 120100 | 120100 | 天津市    | 120000 |
| 120108 | 东丽区       | 120100 | 120100 | 天津市    | 120000 |
| 120109 | 西青区       | 120100 | 120100 | 天津市    | 120000 |
| 120110 | 津南区       | 120100 | 120100 | 天津市    | 120000 |
| 120111 | 北辰区       | 120100 | 120100 | 天津市    | 120000 |
| 120112 | 武清区       | 120100 | 120100 | 天津市    | 120000 |
| 120113 | 宝坻区       | 120100 | 120100 | 天津市    | 120000 |
| 120114 | 宁河县       | 120100 | 120100 | 天津市    | 120000 |
| 120115 | 静海县       | 120100 | 120100 | 天津市    | 120000 |
| 120116 | 蓟县         | 120100 | 120100 | 天津市    | 120000 |
+--------+--------------+--------+--------+-----------+--------+
34 rows in set (0.00 sec)

select * from areas as c inner join areas as p on c.pid=p.aid where p.atitle='北京市';
+--------+--------------+--------+--------+-----------+--------+
| aid    | atitle       | pid    | aid    | atitle    | pid    |
+--------+--------------+--------+--------+-----------+--------+
| 110100 | 北京市       | 110000 | 110000 | 北京市    |   NULL |
| 110101 | 东城区       | 110100 | 110100 | 北京市    | 110000 |
| 110102 | 西城区       | 110100 | 110100 | 北京市    | 110000 |
| 110103 | 朝阳区       | 110100 | 110100 | 北京市    | 110000 |
| 110104 | 丰台区       | 110100 | 110100 | 北京市    | 110000 |
| 110105 | 石景山区     | 110100 | 110100 | 北京市    | 110000 |
| 110106 | 海淀区       | 110100 | 110100 | 北京市    | 110000 |
| 110107 | 门头沟区     | 110100 | 110100 | 北京市    | 110000 |
| 110108 | 房山区       | 110100 | 110100 | 北京市    | 110000 |
| 110109 | 通州区       | 110100 | 110100 | 北京市    | 110000 |
| 110110 | 顺义区       | 110100 | 110100 | 北京市    | 110000 |
| 110111 | 昌平区       | 110100 | 110100 | 北京市    | 110000 |
| 110112 | 大兴区       | 110100 | 110100 | 北京市    | 110000 |
| 110113 | 怀柔区       | 110100 | 110100 | 北京市    | 110000 |
| 110114 | 平谷区       | 110100 | 110100 | 北京市    | 110000 |
| 110115 | 密云县       | 110100 | 110100 | 北京市    | 110000 |
| 110116 | 延庆县       | 110100 | 110100 | 北京市    | 110000 |
+--------+--------------+--------+--------+-----------+--------+
17 rows in set (0.00 sec)
```

子查询
---

```sql
select * from (select ...)
```

select 语句中 嵌入 另一个select 语句 …. 被嵌入的select的语句 称为 '子查询'

### 标量子查询

子查询返回的结果是一个数据(一行一列)

```sql
select * from students where age> (select avg(age) from students);

+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  3 | 彭于晏    |   29 | 185.00 | 男     |      1 |          |
|  4 | 刘德华    |   59 | 175.00 | 男     |      2 |         |
|  5 | 芙蓉      |   38 | 160.00 | 女     |      1 |          |
|  6 | 凤姐      |   28 | 150.00 | 保密   |      2 |         |
|  8 | 周杰伦    |   36 |   NULL | 男     |      1 |          |
|  9 | 程坤      |   27 | 181.00 | 男     |      2 |          |
| 11 | 金星      |   33 | 162.00 | 人妖   |      3 |         |
| 13 | 周杰      |   34 | 176.00 | 女     |      5 |          |
+----+-----------+------+--------+--------+--------+----------+
8 rows in set (0.00 sec)
```

理解:

因为 嵌入的select语句 得到的结果只有(一行一列) 所以 这种子查询 叫做'标量子查询'

```sql
select avg(age) from students;
+----------+
| avg(age) |
+----------+
|  26.7857 |
+----------+
1 row in set (0.00 sec)
```

### 列子查询

子查询返回的结果是一列(一列多行)

```sql
select * from classes where id in (select cls_id from students);

+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  2 | class_2 |
|  3 | class_3 |
|  4 | class_4 |
|  5 | class_5 |
+----+---------+
5 rows in set (0.00 sec)
```

### 行子查询

子查询返回结果是一行(一行多列)

```sql
-- 临时修改数据
update students set height=190 where id = 4;

-- 行子查询
select * from students where (age,height)=(select max(age),max(height) from students);
+----+-----------+------+--------+--------+--------+----------+
| id | name      | age  | height | gender | cls_id | isdelete |
+----+-----------+------+--------+--------+--------+----------+
|  4 | 刘德华    |   59 | 190.00 | 男     |      2 |         |
+----+-----------+------+--------+--------+--------+----------+
1 row in set (0.00 sec)
```

### 表级子查询

子查询返回的结果是一个表(多行多列)

```sql
select * from (select s.name as sname,p.name as pname from students as s inner join classe
+-----------+---------+
| sname     | pname   |
+-----------+---------+
| 小铭      | class_1 |
| 小月月    | class_2 |
| 彭于晏    | class_1 |
| 刘德华    | class_2 |
| 芙蓉      | class_1 |
| 凤姐      | class_2 |
| 王祖贤    | class_1 |
| 周杰伦    | class_1 |
| 程坤      | class_2 |
| 刘亦菲    | class_2 |
| 金星      | class_3 |
| 静香      | class_4 |
| 周杰      | class_5 |
+-----------+---------+
13 rows in set (0.00 sec)
```

### 子查询中特定关键字

in 范围

```sql
格式: 主查询 where 条件 in (列子查询)

select * from classes where id in (select cls_id from students);
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  2 | class_2 |
|  3 | class_3 |
|  4 | class_4 |
|  5 | class_5 |
+----+---------+
5 rows in set (0.00 sec)


```

any 和 some:任意一个

```sql
格式: 主查询 where 列 = any (列子查询)
在条件查询的结果中匹配任意一个即可,等价于 in

select * from classes where id=some (select cls_id from students);
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  2 | class_2 |
|  3 | class_3 |
|  4 | class_4 |
|  5 | class_5 |
+----+---------+
5 rows in set (0.00 sec)

select * from classes where id =any (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  2 | class_2 |
|  3 | class_3 |
|  4 | class_4 |
+----+---------+
3 rows in set (0.00 sec)

select * from classes where id >any (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  3 | class_3 |
|  4 | class_4 |
|  5 | class_5 |
|  6 | class_6 |
+----+---------+
4 rows in set (0.00 sec)

select * from classes where id <any (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  2 | class_2 |
|  3 | class_3 |
+----+---------+
3 rows in set (0.00 sec)
```

all

```sql
格式: 主查询 where 列 = all(列子查询) : 等于里面所有
select * from classes where id =all (select cls_id from students where cls_id between 2 and 2);
+----+---------+
| id | name    |
+----+---------+
|  2 | class_2 |
+----+---------+
1 row in set (0.00 sec)



格式: 主查询 where 列 <>all(列子查询) : 不等于其中所有
select * from classes where id <>all (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
|  5 | class_5 |
|  6 | class_6 |
+----+---------+
3 rows in set (0.00 sec)


select * from classes where id <all (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  1 | class_1 |
+----+---------+
1 row in set (0.00 sec)

select * from classes where id >all (select cls_id from students where cls_id between 2 and 4);
+----+---------+
| id | name    |
+----+---------+
|  5 | class_5 |
|  6 | class_6 |
+----+---------+
2 rows in set (0.00 sec)


```

外键
--

### 创建外键

```sql
alter table goods add foreign key (cate_id) references goods_cates(cate_id); 
alter table goods add foreign key (brand_id) references goods_brands(brand_id);
```

如何在创建数据表的时候就设置外键约束呢？

注意：goods中的cate id的类型一定要和goods\_cates表中的cate\_id类型一致

```sql
create table goods(
    id int primary key auto_increment not null,
    name varchar(40) default '',
    price decimal(5,2),
    cate_id int unsigned,
    brand_id int unsigned,
    is_show bit default 1,
    is_saleoff bit default 0,
    foreign key(cate_id) references goods_cates(cate_id),
    foreign key(brand_id) references goods_brands(brand_id)
);

```

### 删除外键

```sql
-- 需要先或许外键约束名称,该名称系统会自动生成,可以通过查看表创建语句来获取名称
show create table goods;
-- 获取名称之后就可以根据名称来删除外键约束
alter table goods drop foreign key 外键名称;
```



高级
==

视图
--

### 创建

```sql
create view 视图名称 as selct语句

create view stu_view as 
select s.name sname, p.name pname from students s inner join classes p on s.cls_id=p.id;
```

### 使用

```sql
select * from stu_view;
+-----------+---------+
| sname     | pname   |
+-----------+---------+
| 小铭      | class_1 |
| 小月月    | class_2 |
| 彭于晏    | class_1 |
| 刘德华    | class_2 |
| 芙蓉      | class_1 |
| 凤姐      | class_2 |
| 王祖贤    | class_1 |
| 周杰伦    | class_1 |
| 程坤      | class_2 |
| 刘亦菲    | class_2 |
| 金星      | class_3 |
| 静香      | class_4 |
| 周杰      | class_5 |
+-----------+---------+
13 rows in set (0.00 sec)
```

### 删除

```sql
drop view stu_view;
```

事务
--

* 表的引擎类型必须是innodb类型才可以使用事务，这是mysql表的默认引擎
* 查看表的创建语句，可以看到engine=innodb

### 开启:

```sql
-- 开启事务后执行修改命令，变更会维护到本地缓存中，而不维护到物理表中
begin;
```

```sql
-- 修改数据的命令会触发事务，包括insert、update、delete
show create table students;
```

### 提交

```sql
-- 提交事务，命令如下
-- 将缓存中的数据变更维护到物理表中
commit;
```

### 回滚

```sql
-- 回滚事务，命令如下：
-- 放弃缓存中变更的数据
rollback;
```

索引:
---

### 查看索引

```sql
show index from 表名;



show index from students;
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| Table    | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
| students |          0 | PRIMARY  |            1 | id          | A         |          13 |     NULL | NULL   |      | BTREE      |         |               |
+----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
1 row in set (0.00 sec)
```

### 创建索引

* 如果指定字段是字符串，需要指定长度，建议长度与定义字段时的长度一致
* 字段类型如果不是字符串，可以不填写长度部分

```sql
create index 索引名称 on 表名(字段名称(长度))

create index test_index on students(age);
```

### 删除索引：

```sql
drop index 索引名称 on 表名;

drop index test_index on students;
```

![image](https://github.com/HenryDLC/learn_python/raw/master/python基础/mysql数据库/mysql数据库.png)






注:
==

### 缺少:

* 内置函数
* 自定义函数
* 存储过程
